apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.google.gms.google-services"
apply plugin: "com.google.firebase.crashlytics"
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"
apply plugin: 'kotlin-android'
apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")

def enableProguardInReleaseBuilds = false // Cambia a true si habilitas Proguard

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.eias.er6"
    defaultConfig {
        applicationId "com.eias.er6"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true // Asegúrate de incluir multidex si es necesario
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
         release {
            storeFile file('releasekey.keystore') // Cambia esto por el camino a tu keystore
            storePassword 'ReleaseKeyPassword123' // Contraseña de keystore
            keyAlias 'releasekey-alias' // Alias del keystore
            keyPassword 'ReleaseAliasPassword456' // Contraseña del alias
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release // Usa la configuración de lanzamiento
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")
    implementation project(':react-native-gesture-handler')
    implementation project(':react-native-safe-area-context')
    implementation project(':react-native-screens')

    //firebase app    
    implementation project(path: ":@react-native-firebase_app")
    implementation project(':@react-native-firebase_messaging')

    implementation project(path: ":@react-native-firebase_auth")

    //vision
    implementation project(path: ":react-native-vision-camera")


    // Hermes or JavaScriptCore
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
    implementation("com.google.firebase:firebase-analytics-ktx")
    implementation platform('com.google.firebase:firebase-bom:32.3.1')
    implementation 'com.google.firebase:firebase-auth' // Sin especificar versión, usa la del BOM
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
        
    implementation project(':@react-native-google-signin_google-signin')
    implementation project(':react-native-config')

    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-perf'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'androidx.multidex:multidex:2.0.1' // Agrega multidex si es necesario
    implementation project(':react-native-splash-screen')

    implementation project(':react-native-svg')


    // Use this dependency to bundle the model with your app
    implementation 'com.google.mlkit:barcode-scanning:17.3.0'

    // Use this dependency to use the dynamically downloaded model in Google Play Services
    implementation 'com.google.android.gms:play-services-mlkit-barcode-scanning:18.3.1'

    implementation "com.facebook.react:react-native:+"
    implementation project(':react-native-reanimated')

    implementation project(':react-native-pager-view')
    implementation project(':react-native-vector-icons')
}
